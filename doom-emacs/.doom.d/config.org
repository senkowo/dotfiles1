#+TITLE: Doom Emacs Config
#+PROPERTY: header-args :tangle config.el
#+auto_tangle: t
#+STARTUP: showeverything

* Table of Contents :toc:
- [[#about][About]]
- [[#help][Help]]
- [[#general][General]]
- [[#editor][Editor]]
- [[#fonts][Fonts]]
- [[#misc][Misc]]
- [[#org][Org]]
  - [[#auto-tangle][auto-tangle]]
- [[#applications][Applications]]
  - [[#erc][erc]]
  - [[#treemacs][Treemacs]]
  - [[#dired][dired]]
  - [[#twittering-mode][Twittering-mode]]
- [[#keybinds][Keybinds]]
- [[#startup][Startup]]
- [[#fixes][Fixes]]

* About
This is the main Doom Emacs Config
#+begin_src emacs-lisp
;;------------------------------------;;
;; NOTE: USE THE ORG DOCUMENT TO EDIT ;;
;;------------------------------------;;
#+end_src
* Help
#+begin_src emacs-lisp
;;; $DOOMDIR/config.el -*- lexical-binding: t; -*-

;; Place your private configuration here! Remember, you do not need to run 'doom
;; sync' after modifying this file!


;; Some functionality uses this to identify you, e.g. GPG configuration, email
;; clients, file templates and snippets. It is optional.
;; (setq user-full-name "John Doe"
;;      user-mail-address "john@doe.com")

;; Doom exposes five (optional) variables for controlling fonts in Doom:
;;
;; - `doom-font' -- the primary font to use
;; - `doom-variable-pitch-font' -- a non-monospace font (where applicable)
;; - `doom-big-font' -- used for `doom-big-font-mode'; use this for
;;   presentations or streaming.
;; - `doom-unicode-font' -- for unicode glyphs
;; - `doom-serif-font' -- for the `fixed-pitch-serif' face
;;
;; See 'C-h v doom-font' for documentation and more examples of what they
;; accept. For example:
;;
;;(setq doom-font (font-spec :family "monospace" :size 12 :weight 'semi-light)
;;      doom-variable-pitch-font (font-spec :family "sans" :size 13))
;;
;; If you or Emacs can't find your font, use 'M-x describe-font' to look them
;; up, `M-x eval-region' to execute elisp code, and 'M-x doom/reload-font' to
;; refresh your font settings. If Emacs still can't find your font, it likely
;; wasn't installed correctly. Font issues are rarely Doom issues!

;; There are two ways to load a theme. Both assume the theme is installed and
;; available. You can either set `doom-theme' or manually load a theme with the
;; `load-theme' function. This is the default:
;;(setq doom-theme 'doom-one)


;; This determines the style of line numbers in effect. If set to `nil', line
;; numbers are disabled. For relative line numbers, set this to `relative'.
;;(setq display-line-numbers-type t)

;; If you use `org' and don't want your org files in the default location below,
;; change `org-directory'. It must be set before org loads!
;;(setq org-directory "~/org/")


;; Whenever you reconfigure a package, make sure to wrap your config in an
;; `after!' block, otherwise Doom's defaults may override your settings. E.g.
;;
;;   (after! PACKAGE
;;     (setq x y))
;;
;; The exceptions to this rule:
;;
;;   - Setting file/directory variables (like `org-directory')
;;   - Setting variables which explicitly tell you to set them before their
;;     package is loaded (see 'C-h v VARIABLE' to look up their documentation).
;;   - Setting doom variables (which start with 'doom-' or '+').
;;
;; Here are some additional functions/macros that will help you configure Doom.
;;
;; - `load!' for loading external *.el files relative to this one
;; - `use-package!' for configuring packages
;; - `after!' for running code after a package has loaded
;; - `add-load-path!' for adding directories to the `load-path', relative to
;;   this file. Emacs searches the `load-path' when you load packages with
;;   `require' or `use-package'.
;; - `map!' for binding new keys
;;
;; To get information about any of these functions/macros, move the cursor over
;; the highlighted symbol at press 'K' (non-evil users must press 'C-c c k').
;; This will open documentation for it, including demos of how they are used.
;; Alternatively, use `C-h o' to look up a symbol (functions, variables, faces,
;; etc).
;;
;; You can also try 'gd' (or 'C-c c d') to jump to their definition and see how
;; they are implemented.


;;; BEGIN CONFIG ---------------------

#+end_src
* General
#+begin_src emacs-lisp
;; set user info
(setq user-full-name "awoo"
      user-mail-address "uwu@owo")

;; set theme
;(setq doom-theme 'doom-laserwave) ;; balanced
;(setq doom-theme 'TransSide)
;(setq doom-theme 'manoj-dark) ;; hard to see location bar
;(setq doom-theme 'doom-ir-black) ;; actually quite nice -- STRONG src-block highlighting
(setq doom-theme 'modus-vivendi) ;; org bold pale colors -- no src-block highlighting
;(setq doom-theme 'doom-ayu-dark) ;; plain, purple
;(setq doom-theme 'doom-zenburn) ;; hard to read comments
;(setq doom-theme 'doom-tokyo-night) ;; hard to see color syntax highlighting
;(setq doom-theme 'doom-palenight) ;; colors interesting
;(setq doom-theme 'doom-sourcerer) ;; kinda murky
;(setq doom-theme 'doom-moonlight) ;; pretty nice i think

;; remove src-block highlighting?
;(custom-set-faces
;  '(org-block-begin-line ((t (:background nil))))
;  '(org-block-end-line   ((t (:background nil)))))

;; enable autosave
(setq auto-save-default t
      make-backup-files t)

;------------------------------------
#+end_src

* Editor
#+begin_src emacs-lisp
;; adjusts max columns from 80 to x
(setq-default fill-column 100)

;; line numbers
(setq display-line-numbers-type 'relative)

; A buffer can get out of sync with respect to its visited file on disk if that
; file is changed by another program. To keep it up to date, you can enable Auto
; Revert mode by typing M-x auto-revert-mode, or you can set it to be turned on
; globally with ‘global-auto-revert-mode’.  I have also turned on Global Auto
; Revert on non-file buffers, which is especially useful for ‘dired’ buffers.
;(global-auto-revert-mode 1)
;(setq global-auto-revert-non-file-buffers t)

;------------------------------------
#+end_src
* Fonts
#+begin_src emacs-lisp
;; set fonts
(setq doom-font (font-spec :family "Jetbrains Mono" :size 13)
      ;doom-variable-pitch-font (font-spec :family "Hack" :height 1.0))
      ;doom-variable-pitch-font (font-spec :family "Roboto" :height 1.0))
      ;doom-variable-pitch-font (font-spec :family "open-sans" :height 1.0))
      ;doom-variable-pitch-font (font-spec :family "AlegreyaSans" :height 1.0))
      doom-variable-pitch-font (font-spec :family "DejaVuSans" :height 1.0))

;; mix fonts
(use-package! mixed-pitch
  :hook (org-mode . mixed-pitch-mode)
  :config
  (setq mixed-pitch-set-height t)
  (set-face-attribute 'variable-pitch nil :height 0.9))

;------------------------------------
#+end_src
* Misc
#+begin_src emacs-lisp
;; search provider
(add-to-list '+lookup-provider-url-alist '("LibreX" "https://librex.mikata.ru/search.php?q=%s"))

#+end_src

#+RESULTS:

* Org
** auto-tangle
#+begin_src emacs-lisp
;; org directory
(setq org-directory "~/Documents/org/")

;; org-agenda
(after! org
  (setq org-agenda-files '("~/Documents/org/agenda/"
                           "~/notes.org"
                           "tasks.org")))

;; other org settings
(setq doom-modeline-enable-word-count t)

;; auto-tangle
(use-package! org-auto-tangle
  :defer t
  :hook (org-mode . org-auto-tangle-mode))

;------------------------------------
#+end_src
* Applications
** erc
#+begin_src emacs-lisp
;; erc
;;(map! :map 'global "SPC d e" #'erc-tls)
(after! erc
  (setq erc-prompt (lambda () (concat "[" (buffer-name) "]"))
        erc-server "irc.libera.chat"
        ;erc-autojoin-channels-alist '(("irc.libera.chat" "#emacs" "#linux"))
        erc-nick "senko"
        erc-user-full-name "Aila"
        ;; By default, ERC selects the channel buffers when it reconnects. If you'd like it to connect to channels in the background, use this:
        ;erc-auto-query 'bury
        erc-kill-buffer-on-part t
        erc-fill-column 100
        ;erc-fill-function 'erc-fill-static ; align
        ;erc-fill-static-center 20          ; align
        ))

;------------------------------------
#+end_src
** Treemacs
#+begin_src emacs-lisp
;; treemacs
(setq treemacs-width 30)

;------------------------------------
#+end_src
** dired
#+begin_src emacs-lisp
;; dired keybinds
(map! :leader
      (:prefix ("d" . "dired")
       :desc "Open dired" "d" #'dired
       :desc "Dired jump to current" "j" #'dired-jump)
      (:after dired
       (:map dired-mode-map
        :desc "Peep-dired image previews" "d p" #'peep-dired
        :desc "Dired view file" "d v" #'dired-view-file)))

;(add-hook 'dired-mode-hook 'all-the-icons-dired-mode)

(setq dired-open-extensions '(("gif" . "feh")
                              ("jpg" . "feh")
                              ("png" . "feh")
                              ("mkv" . "mpv")
                              ("mp4" . "mpv")))

;------------------------------------
#+end_src
** Twittering-mode
#+begin_src emacs-lisp
;; twittering-mode
;;(after! twittering-mode
;;  (setq twittering-icon-mode t
;;      twittering-convert-fix-size 48
;;      twittering-use-icon-storage t))

;------------------------------------
#+end_src
* Keybinds
#+begin_src emacs-lisp
;; move window focus
(use-package windmove
  :bind
  (("C-M-h". windmove-left)
   ("C-M-l". windmove-right)
   ("C-M-k". windmove-up)
   ("C-M-j". windmove-down)
   ("C-M-o". other-window)))
;(map! "C-M-h" #'windmove-left
;      "C-M-l" #'windmove-right
;      "C-M-k" #'windmove-up
;      "C-M-j" #'windmove-down
;      "C-M-o" #'other-window))

;; user keybinds
(map! :leader
      (:prefix ("k" . "user-keybinds")
       :desc "clipboard-yank" "p" #'clipboard-yank
       :desc "open-most-recent-file" "1" #'recentf-open-most-recent-file
       (:prefix ("o" . "open")
        :desc "erc-tls" "e" #'erc-tls)))

;------------------------------------
#+end_src
* Startup
* Fixes
#+begin_src emacs-lisp
;; fix workspaces start in main with emacsclient?
(after! persp-mode
  (setq persp-emacsclient-init-frame-behaviour-override "main"))
;; fix to show bar with emacsclient (should be fixed in the next update of centaur-tabs)
;(after! centaur-tabs
  ;(setq centaur-tabs-set-bar 'right))
;; start flycheck-mode-hook on load rust project?
;(with-eval-after-load 'rust-mode
  ;(add-hook 'flycheck-mode-hook #'flycheck-rust-setup))

;------------------------------------
#+end_src
